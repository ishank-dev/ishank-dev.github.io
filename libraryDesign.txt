A library System

Requirements / Features 
1. Anyone can search, issue a book on his/her name 
2. Librarian can add,update, delete books and students 
3. one user can keep 5 books at a time for 30 days after the day of issueing 
4. Fine Management 
5. Reserve book in advance for non-available books 

Entities 

User -> has a unique id, can issue a book, search the catalogue, self checkout books 
Book -> has a unique id 
Admin -> can send fine notification, add,update,delete books 

Functional Requirements 

1.Add, Remove and Edit a book 
2.Search functionality -> elastic search 
3. Register a new user/ Delete a user 
4. Checkout a book 
5. Renew a book 
6. Return a book 


User                                         Librarian 

Checkout a book                             Create,Update,Delete a book    
search a book --> author, name, isbn 
return a book (with or without fine) 
renew a book 


Non Functional Requirements 
- third party APIs 
- Caching

Extended Requirments 

High Level Design 

Client (mobile or web ) --> global/distributed cache -->load balancer --> backend services --> data , file storage

Calculations 
1. Number of users per day --> 500
2. Total users --> 10,000
3. Request per day --> 500
4. Meta data per student --> 200Kb
5. Total storage --> 200Kb * 10,000 = 20,000000 Kb = 20GB  of usage 
6. Bandwidth --> 500/60*60*24 = 3.3 Kbps 

API design 

REST architecture 

GET 
/
List of books 

